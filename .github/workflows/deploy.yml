name: Deploy Website

on:
  push:
    branches:
      - main  # Dieser Workflow wird ausgeführt, wenn etwas in den "main"-Branch gepusht wird

jobs:
  deploy:
    runs-on: ubuntu-latest  # GitHub verwendet eine virtuelle Ubuntu-Maschine, um den Job auszuführen

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2  # Diese Aktion klont dein Repository in die virtuelle Maschine

      - name: Set up SSH agent
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SERVER }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_ed25519
          echo "SSH_AUTH_SOCK=$SSH_AUTH_SOCK" >> $GITHUB_ENV
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock

      - name: Add server to known hosts
        run: ssh-keyscan -p 52123 85.214.106.223 >> ~/.ssh/known_hosts

      - name: Test SSH connection
        run: ssh -v -p 52123 jhahn@85.214.106.223 "echo SSH connection successful"

      - name: Deploy to Server
        run: |
          sshpass -p "${{ secrets.PP }}" scp -P 52123 -r ./* jhahn@85.214.106.223:/var/www/html/klapp.pizza/  # Kopiert alle Dateien auf deinen Server und nutzt Port 3123
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER }}  # Nutzt den Secret, den du vorher eingerichtet hast
          SSH_PASSPHRASE: ${{ secrets.PP }}  # Nutzt den Secret für die Passphrase
